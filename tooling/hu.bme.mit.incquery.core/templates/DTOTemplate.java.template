/*******************************************************************************
 * EMF Specific pattern signature of the #pattern-fqn# pattern
 * Generated by EMF-IncQuery
 *******************************************************************************/

package #java-package#;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.viatra2.compiled.emf.runtime.api.IPatternSignature;

/**
 * Domain specific Data transfer Object of the #pattern-fqn# pattern.
 * Class fields correspond to parameters of the pattern. Fields with value null are considered unassigned.
 * Each instance is a partial substitution of pattern parameters, 
 * usable e.g. to represent a match of the pattern.
 */
public class #java-class# implements IPatternSignature {

	//constructor
	public #java-class#(#java-inputparams#) {
#java-setattributes#	
	}

	//private attributes
#java-attributes#
	
	//getter methods
#java-getters#
	
	//setter methods
#java-setters#

	//overridden hashCode() and equals() with Tuple-semantics
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		#java-class# other = (#java-class#) obj;
#equals-override#
		return true;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
#hashcode-override#
		return result;
	}

#tostring-override#

	@Override
	public Object[] toArray() {
		return new Object[] {#fields-list#};
	}
}
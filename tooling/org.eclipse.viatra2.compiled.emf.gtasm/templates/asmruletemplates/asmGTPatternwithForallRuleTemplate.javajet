<%@ jet package="viatra.gtasm.compiled.template.asm" class="AsmGTPatternwithForallTemplate" 
imports="viatra.gtasm.compiled.template.datastructure.PatternInvocationContextData
 viatra.patternmatcher.ParameterMode 
 viatra.patternmatcher.PatternCallSignature 
 viatra.gtasm.compiled.asm.ContainmentScope"%>
<%PatternInvocationContextData data = (PatternInvocationContextData) argument;%>
Iterator<IMatching> iter_<%=data.getCurrentID()%> = <%=data.getName()%>(<%=data.getInvocationSignature()%>);
while(iter_<%=data.getCurrentID()%>.hasNext()){
IMatching iMatch_<%=data.getCurrentID()%>= iter_<%=data.getCurrentID()%>.next();

<% for(int i = 0; i < data.getPatternCallSignatures().length; i++){
if(data.getPatternCallSignatures()[i].getParameterMode().compareTo(ParameterMode.OUTPUT) == 0)%>
<%{%>Object <%=data.getPatternParams()[i].getTerm().toString()%> = iMatch_<%=data.getCurrentID()%>.lookup(<%=i%>);

<%}else%>
<%{%><%=data.getPatternParams()[i].getTerm().toString()%> = iMatch_<%=data.getCurrentID()%>.lookup(<%=i%>);

<%}%>
<%}%>
<?xml version="1.0" encoding="UTF-8"?>
<compositeCheatsheet name="Getting Started with EMF-IncQuery">
   <taskGroup kind="set" name="Query your models using IncQuery" skip="false">
      <intro>
         EMF-IncQuery is a technology, that can be used to <b>efficiently query EMF instance models</b> in an <b>incremental way</b>. Completing the tasks you will know how to create an IncQuery plug-in, how to use it, and where to look for further information. The sheets guide you through a library example, that works immediately.
      </intro>
      <onCompletion>
      </onCompletion>
      <task kind="cheatsheet" name="Creating an EMF-IncQuery Project" skip="false">
         <intro>
            Creating the EMF-IncQuery project requires the existence of an EMF project which contains the <b>metamodel in Ecore format</b> and <b>queries formulated in VIATRA pattern language</b>. Completing this sheet the IncQuery <b>Eclipse plug-in</b> will be created, that <b>provides query functions in Java</b> returning the result set of the queries.
         </intro>
         <onCompletion>
         </onCompletion>
         <param name="path" value="newproject.xml">
         </param>
      </task>
      <task kind="cheatsheet" name="Inspecting the Generated Code" skip="false">
         <intro>
            An EMF-IncQuery plugin provides <b>only the code base</b> to perform queries. This cheat sheet describes the automatic creation of a <b>sample UI project</b>, and its usage. The generated code can also be inspected to write your own code.
         </intro>
         <onCompletion>
         </onCompletion>
         <param name="path" value="evaluation.xml">
         </param>
      </task>
   </taskGroup>
</compositeCheatsheet>
